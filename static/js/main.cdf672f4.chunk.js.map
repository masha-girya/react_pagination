{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","React","memo","total","perPage","currentPage","onPageChange","amountOfPages","Math","ceil","isFirstPage","isLastPage","visiblePages","className","classNames","disabled","href","onClick","map","page","isCurrentPage","active","options","App","useState","setPerPage","setCurrentPage","initialItems","itemsOnPage","useCallback","currPage","itemsPerPage","itemStart","itemEnd","filter","i","visibleItems","useMemo","length","id","value","onChange","event","Number","target","option","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"kMAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCIIG,EAA8BC,IAAMC,MAAK,YAK/C,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAgBC,KAAKC,KAAKN,EAAQC,GAClCM,EAAcL,EAAc,IAAM,EAClCM,EAAaN,IAAgBE,EAC7BK,EAAelB,EAAW,EAAGa,GAEnC,OACE,qBAAIM,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAW,YAAa,CACrCC,SAAUL,IADZ,SAIE,mBACE,UAAQ,WACRG,UAAU,YACVG,KAAK,QACL,gBAAeN,EACfO,QAAS,kBACNP,GAAeJ,EAAaD,EAAc,IAN/C,oBAaDO,EAAaM,KAAI,SAAAC,GAChB,IAAMC,EAAgBf,IAAgBc,EAEtC,OACE,oBACEN,UAAWC,IAAW,YAAa,CACjCO,OAAQD,IAFZ,SAME,mBACE,UAAQ,WACRP,UAAWC,IAAW,aACtBE,KAAI,WAAMG,GACVF,QAAS,kBACNG,GAAiBd,EAAaa,IALnC,SAQGA,KAVEA,MAgBX,oBAAIN,UAAWC,IAAW,YAAa,CACrCC,SAAUJ,IADZ,SAIE,mBACE,UAAQ,WACRE,UAAU,YACVG,KAAK,QACL,gBAAeL,EACfM,QAAS,kBACNN,GAAcL,EAAaD,EAAc,IAN9C,0BChEFiB,EAAU,CAAC,EAAG,EAAG,GAAI,IAEdC,EAAgB,WAC3B,MAA8BC,mBAAS,GAAvC,mBAAOpB,EAAP,KAAgBqB,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOnB,EAAP,KAAoBqB,EAApB,KACA,EAAgBF,mBAAS,IAAlBrB,EAAP,oBAEMwB,EAAejC,EAAW,EAAGS,GAE7ByB,EAAcC,uBAAY,SAACC,EAAkBC,GACjD,IAAMC,EAAYD,GAAgBD,EAAW,GACvCG,EAAUD,EAAYD,EAAe,EAE3C,OAAOJ,EAAaO,QAAO,SAAAC,GAAC,OAC1BA,EAAIH,GAAaG,EAAIF,OACtB,IAEGG,EAAeC,mBAAQ,WAC3B,OAAOT,EAAYvB,EAAaD,KAC/B,CAACC,EAAaD,IAMjB,OAJIC,EAAcG,KAAKC,KAAKN,EAAQC,IAClCsB,EAAe,GAIf,sBAAKb,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWR,EADX,mBACiC+B,EAAa,GAD9C,cACsDA,EAAaA,EAAaE,OAAS,GADzF,eACkGnC,EADlG,OAIA,sBAAKU,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACR0B,GAAG,kBACH1B,UAAU,eACV2B,MAAOpC,EACPqC,SAAU,SAACC,GAAD,OAAWjB,EAAWkB,OAAOD,EAAME,OAAOJ,SALtD,SAOGlB,EAAQJ,KAAI,SAAA2B,GAAM,OACjB,wBAAQL,MAAOK,EAAf,SACGA,GADyBA,UAOlC,uBAAOC,QAAQ,kBAAkBjC,UAAU,qBAA3C,+BAKF,cAACb,EAAD,CACEG,MAAO,GACPC,QAASA,EACTC,YAAaA,EACbC,aAAcuB,sBAAYH,EAAgB,CAACrB,EAAaD,MAG1D,6BACGgC,EAAalB,KAAI,SAAA6B,GAAI,OACpB,oBAAI,UAAQ,OAAZ,wBACWA,IADaA,YClElCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.cdf672f4.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import classNames from 'classnames';\nimport React from 'react';\nimport { getNumbers } from '../../utils';\n\ninterface Props {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void,\n}\n\nexport const Pagination: React.FC<Props> = React.memo(({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const amountOfPages = Math.ceil(total / perPage);\n  const isFirstPage = currentPage - 1 === 0;\n  const isLastPage = currentPage === amountOfPages;\n  const visiblePages = getNumbers(1, amountOfPages);\n\n  return (\n    <ul className=\"pagination\">\n      <li className={classNames('page-item', {\n        disabled: isFirstPage,\n      })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={isFirstPage}\n          onClick={() => (\n            !isFirstPage && onPageChange(currentPage - 1)\n          )}\n        >\n          «\n        </a>\n      </li>\n\n      {visiblePages.map(page => {\n        const isCurrentPage = currentPage === page;\n\n        return (\n          <li\n            className={classNames('page-item', {\n              active: isCurrentPage,\n            })}\n            key={page}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className={classNames('page-link')}\n              href={`#${page}`}\n              onClick={() => (\n                !isCurrentPage && onPageChange(page)\n              )}\n            >\n              {page}\n            </a>\n          </li>\n        );\n      })}\n\n      <li className={classNames('page-item', {\n        disabled: isLastPage,\n      })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={isLastPage}\n          onClick={() => (\n            !isLastPage && onPageChange(currentPage + 1)\n          )}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n});\n","import React, { useCallback, useMemo, useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination/Pagination';\n\nconst options = [3, 5, 10, 20];\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [total] = useState(42);\n\n  const initialItems = getNumbers(1, total);\n\n  const itemsOnPage = useCallback((currPage: number, itemsPerPage: number) => {\n    const itemStart = itemsPerPage * (currPage - 1);\n    const itemEnd = itemStart + itemsPerPage + 1;\n\n    return initialItems.filter(i => (\n      i > itemStart && i < itemEnd));\n  }, []);\n\n  const visibleItems = useMemo(() => {\n    return itemsOnPage(currentPage, perPage);\n  }, [currentPage, perPage]);\n\n  if (currentPage > Math.ceil(total / perPage)) {\n    setCurrentPage(1);\n  }\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${visibleItems[0]} - ${visibleItems[visibleItems.length - 1]} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={(event) => setPerPage(Number(event.target.value))}\n          >\n            {options.map(option => (\n              <option value={option} key={option}>\n                {option}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={42}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={useCallback(setCurrentPage, [currentPage, perPage])}\n      />\n\n      <ul>\n        {visibleItems.map(item => (\n          <li data-cy=\"item\" key={item}>\n            {`Item ${item}`}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}